# Generated by Django 5.1.5 on 2025-02-05 19:46

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_1', models.TextField()),
                ('value_2', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=1000, unique=True)),
                ('first_name', models.CharField(max_length=1000)),
                ('last_name', models.CharField(max_length=1000)),
                ('middle_name', models.CharField(max_length=1000)),
                ('city', models.CharField(max_length=1000)),
                ('town', models.CharField(max_length=1000)),
                ('rural', models.CharField(max_length=1000)),
                ('school', models.CharField(max_length=1000)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CEFR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('duration', models.IntegerField(default=60)),
                ('participants', models.ManyToManyField(blank=True, related_name='cefr_participants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CEFRResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cases', models.JSONField(default=list)),
                ('correct', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cefr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.cefr')),
            ],
        ),
        migrations.CreateModel(
            name='DTM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('block_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtm_block_1', to='users.block')),
                ('block_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtm_block_2', to='users.block')),
                ('block_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtm_block_3', to='users.block')),
                ('block_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtm_block_4', to='users.block')),
                ('block_5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtm_block_5', to='users.block')),
                ('participants', models.ManyToManyField(blank=True, related_name='dtm_participants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DTMResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cases', models.JSONField(default=list)),
                ('correct', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dtm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.dtm')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('point', models.DecimalField(decimal_places=2, default=2, max_digits=10)),
                ('answers', models.ManyToManyField(related_name='question_answers', to='users.answer')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.subject')),
            ],
        ),
        migrations.AddField(
            model_name='cefr',
            name='questions',
            field=models.ManyToManyField(related_name='cefr_questions', to='users.question'),
        ),
        migrations.AddField(
            model_name='block',
            name='questions',
            field=models.ManyToManyField(related_name='block_questions', to='users.question'),
        ),
        migrations.AddField(
            model_name='cefr',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.subject'),
        ),
    ]
